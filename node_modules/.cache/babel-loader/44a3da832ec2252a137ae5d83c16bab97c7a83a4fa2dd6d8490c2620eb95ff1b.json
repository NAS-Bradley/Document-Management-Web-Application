{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bradley.worthen\\\\OneDrive - Nortek, Inc\\\\Documents\\\\Projects\\\\Document Management Web Application\\\\src\\\\context\\\\DocumentContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { aiTaggingService } from '../services/aiTaggingService';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentContext = /*#__PURE__*/createContext();\nconst initialState = {\n  documents: [],\n  tags: [],\n  projects: [],\n  documentTypes: ['PDF', 'Word', 'Excel', 'PowerPoint', 'Image', 'Text', 'Other'],\n  loading: false,\n  error: null,\n  searchQuery: '',\n  selectedFilters: {\n    tags: [],\n    projects: [],\n    documentTypes: [],\n    dateRange: null\n  }\n};\nfunction documentReducer(state, action) {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'ADD_DOCUMENT':\n      return {\n        ...state,\n        documents: [...state.documents, action.payload],\n        loading: false\n      };\n    case 'UPDATE_DOCUMENT':\n      return {\n        ...state,\n        documents: state.documents.map(doc => doc.id === action.payload.id ? {\n          ...doc,\n          ...action.payload\n        } : doc)\n      };\n    case 'DELETE_DOCUMENT':\n      return {\n        ...state,\n        documents: state.documents.filter(doc => doc.id !== action.payload)\n      };\n    case 'SET_DOCUMENTS':\n      return {\n        ...state,\n        documents: action.payload,\n        loading: false\n      };\n    case 'ADD_TAG':\n      return {\n        ...state,\n        tags: [...state.tags, action.payload]\n      };\n    case 'UPDATE_TAG':\n      return {\n        ...state,\n        tags: state.tags.map(tag => tag.id === action.payload.id ? {\n          ...tag,\n          ...action.payload\n        } : tag)\n      };\n    case 'DELETE_TAG':\n      return {\n        ...state,\n        tags: state.tags.filter(tag => tag.id !== action.payload)\n      };\n    case 'SET_TAGS':\n      return {\n        ...state,\n        tags: action.payload\n      };\n    case 'ADD_PROJECT':\n      return {\n        ...state,\n        projects: [...state.projects, action.payload]\n      };\n    case 'SET_PROJECTS':\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case 'SET_SEARCH_QUERY':\n      return {\n        ...state,\n        searchQuery: action.payload\n      };\n    case 'SET_FILTERS':\n      return {\n        ...state,\n        selectedFilters: {\n          ...state.selectedFilters,\n          ...action.payload\n        }\n      };\n    case 'CLEAR_FILTERS':\n      return {\n        ...state,\n        selectedFilters: {\n          tags: [],\n          projects: [],\n          documentTypes: [],\n          dateRange: null\n        }\n      };\n    default:\n      return state;\n  }\n}\nexport function DocumentProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(documentReducer, initialState);\n\n  // Initialize sample data\n  useEffect(() => {\n    const sampleTags = [{\n      id: '1',\n      name: 'Important',\n      color: '#ff6b6b',\n      type: 'priority'\n    }, {\n      id: '2',\n      name: 'Review Required',\n      color: '#ffd93d',\n      type: 'status'\n    }, {\n      id: '3',\n      name: 'Archived',\n      color: '#6bcf7f',\n      type: 'status'\n    }, {\n      id: '4',\n      name: 'Client Documents',\n      color: '#4d94ff',\n      type: 'category'\n    }];\n    const sampleProjects = [{\n      id: '1',\n      name: 'Project Alpha',\n      description: 'Main development project'\n    }, {\n      id: '2',\n      name: 'Project Beta',\n      description: 'Research and development'\n    }, {\n      id: '3',\n      name: 'Administrative',\n      description: 'General administrative tasks'\n    }];\n    dispatch({\n      type: 'SET_TAGS',\n      payload: sampleTags\n    });\n    dispatch({\n      type: 'SET_PROJECTS',\n      payload: sampleProjects\n    });\n  }, []);\n  const uploadDocument = async (file, metadata = {}) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      // Simulate file upload and AI analysis\n      const documentId = uuidv4();\n\n      // Extract basic metadata\n      const basicMetadata = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified\n      };\n\n      // Get AI suggestions\n      const aiSuggestions = await aiTaggingService.analyzeDocument(file, basicMetadata);\n      const newDocument = {\n        id: documentId,\n        ...basicMetadata,\n        ...metadata,\n        uploadDate: new Date().toISOString(),\n        tags: [],\n        suggestedTags: aiSuggestions.suggestedTags,\n        suggestedProject: aiSuggestions.suggestedProject,\n        suggestedDocumentType: aiSuggestions.suggestedDocumentType,\n        content: aiSuggestions.extractedContent,\n        status: 'pending_review',\n        // pending_review, approved, rejected\n        url: URL.createObjectURL(file) // In production, this would be a server URL\n      };\n      dispatch({\n        type: 'ADD_DOCUMENT',\n        payload: newDocument\n      });\n      toast.success('Document uploaded successfully! Please review AI suggestions.');\n      return newDocument;\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n      toast.error('Failed to upload document');\n      throw error;\n    }\n  };\n  const updateDocumentTags = (documentId, tags, approvedSuggestions = {}) => {\n    const updatedDocument = {\n      tags,\n      ...approvedSuggestions,\n      status: 'approved',\n      reviewedAt: new Date().toISOString()\n    };\n    dispatch({\n      type: 'UPDATE_DOCUMENT',\n      payload: {\n        id: documentId,\n        ...updatedDocument\n      }\n    });\n    toast.success('Document tags updated successfully');\n  };\n  const reAnalyzeDocument = async documentId => {\n    const document = state.documents.find(doc => doc.id === documentId);\n    if (!document) return;\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      // Re-analyze with current content and context\n      const newSuggestions = await aiTaggingService.reAnalyzeDocument(document);\n      dispatch({\n        type: 'UPDATE_DOCUMENT',\n        payload: {\n          id: documentId,\n          suggestedTags: newSuggestions.suggestedTags,\n          suggestedProject: newSuggestions.suggestedProject,\n          suggestedDocumentType: newSuggestions.suggestedDocumentType,\n          reAnalyzedAt: new Date().toISOString()\n        }\n      });\n      toast.success('Document re-analyzed successfully');\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n      toast.error('Failed to re-analyze document');\n    }\n  };\n  const bulkReAnalyze = async (documentIds = null) => {\n    const documentsToAnalyze = documentIds ? state.documents.filter(doc => documentIds.includes(doc.id)) : state.documents;\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      for (const document of documentsToAnalyze) {\n        await reAnalyzeDocument(document.id);\n      }\n      toast.success(`Re-analyzed ${documentsToAnalyze.length} documents`);\n    } catch (error) {\n      toast.error('Failed to complete bulk re-analysis');\n    }\n  };\n  const deleteDocument = documentId => {\n    dispatch({\n      type: 'DELETE_DOCUMENT',\n      payload: documentId\n    });\n    toast.success('Document deleted successfully');\n  };\n  const addTag = tagData => {\n    const newTag = {\n      id: uuidv4(),\n      ...tagData,\n      createdAt: new Date().toISOString()\n    };\n    dispatch({\n      type: 'ADD_TAG',\n      payload: newTag\n    });\n    return newTag;\n  };\n  const updateTag = (tagId, tagData) => {\n    dispatch({\n      type: 'UPDATE_TAG',\n      payload: {\n        id: tagId,\n        ...tagData\n      }\n    });\n  };\n  const deleteTag = tagId => {\n    // Also remove this tag from all documents\n    state.documents.forEach(doc => {\n      if (doc.tags.some(tag => tag.id === tagId)) {\n        const updatedTags = doc.tags.filter(tag => tag.id !== tagId);\n        dispatch({\n          type: 'UPDATE_DOCUMENT',\n          payload: {\n            id: doc.id,\n            tags: updatedTags\n          }\n        });\n      }\n    });\n    dispatch({\n      type: 'DELETE_TAG',\n      payload: tagId\n    });\n  };\n  const addProject = projectData => {\n    const newProject = {\n      id: uuidv4(),\n      ...projectData,\n      createdAt: new Date().toISOString()\n    };\n    dispatch({\n      type: 'ADD_PROJECT',\n      payload: newProject\n    });\n    return newProject;\n  };\n  const setSearchQuery = query => {\n    dispatch({\n      type: 'SET_SEARCH_QUERY',\n      payload: query\n    });\n  };\n  const setFilters = filters => {\n    dispatch({\n      type: 'SET_FILTERS',\n      payload: filters\n    });\n  };\n  const clearFilters = () => {\n    dispatch({\n      type: 'CLEAR_FILTERS'\n    });\n  };\n  const getFilteredDocuments = () => {\n    let filtered = [...state.documents];\n\n    // Search query filter\n    if (state.searchQuery) {\n      const query = state.searchQuery.toLowerCase();\n      filtered = filtered.filter(doc => {\n        var _doc$content;\n        return doc.name.toLowerCase().includes(query) || ((_doc$content = doc.content) === null || _doc$content === void 0 ? void 0 : _doc$content.toLowerCase().includes(query)) || doc.tags.some(tag => tag.name.toLowerCase().includes(query));\n      });\n    }\n\n    // Tag filter\n    if (state.selectedFilters.tags.length > 0) {\n      filtered = filtered.filter(doc => doc.tags.some(tag => state.selectedFilters.tags.includes(tag.id)));\n    }\n\n    // Project filter\n    if (state.selectedFilters.projects.length > 0) {\n      filtered = filtered.filter(doc => {\n        var _doc$project;\n        return state.selectedFilters.projects.includes((_doc$project = doc.project) === null || _doc$project === void 0 ? void 0 : _doc$project.id);\n      });\n    }\n\n    // Document type filter\n    if (state.selectedFilters.documentTypes.length > 0) {\n      filtered = filtered.filter(doc => state.selectedFilters.documentTypes.includes(doc.documentType));\n    }\n    return filtered;\n  };\n  const value = {\n    ...state,\n    uploadDocument,\n    updateDocumentTags,\n    reAnalyzeDocument,\n    bulkReAnalyze,\n    deleteDocument,\n    addTag,\n    updateTag,\n    deleteTag,\n    addProject,\n    setSearchQuery,\n    setFilters,\n    clearFilters,\n    getFilteredDocuments\n  };\n  return /*#__PURE__*/_jsxDEV(DocumentContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n}\n_s(DocumentProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = DocumentProvider;\nexport function useDocuments() {\n  _s2();\n  const context = useContext(DocumentContext);\n  if (!context) {\n    throw new Error('useDocuments must be used within a DocumentProvider');\n  }\n  return context;\n}\n_s2(useDocuments, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DocumentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","v4","uuidv4","aiTaggingService","toast","jsxDEV","_jsxDEV","DocumentContext","initialState","documents","tags","projects","documentTypes","loading","error","searchQuery","selectedFilters","dateRange","documentReducer","state","action","type","payload","map","doc","id","filter","tag","DocumentProvider","children","_s","dispatch","sampleTags","name","color","sampleProjects","description","uploadDocument","file","metadata","documentId","basicMetadata","size","lastModified","aiSuggestions","analyzeDocument","newDocument","uploadDate","Date","toISOString","suggestedTags","suggestedProject","suggestedDocumentType","content","extractedContent","status","url","URL","createObjectURL","success","message","updateDocumentTags","approvedSuggestions","updatedDocument","reviewedAt","reAnalyzeDocument","document","find","newSuggestions","reAnalyzedAt","bulkReAnalyze","documentIds","documentsToAnalyze","includes","length","deleteDocument","addTag","tagData","newTag","createdAt","updateTag","tagId","deleteTag","forEach","some","updatedTags","addProject","projectData","newProject","setSearchQuery","query","setFilters","filters","clearFilters","getFilteredDocuments","filtered","toLowerCase","_doc$content","_doc$project","project","documentType","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDocuments","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/bradley.worthen/OneDrive - Nortek, Inc/Documents/Projects/Document Management Web Application/src/context/DocumentContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { aiTaggingService } from '../services/aiTaggingService';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst DocumentContext = createContext();\r\n\r\nconst initialState = {\r\n  documents: [],\r\n  tags: [],\r\n  projects: [],\r\n  documentTypes: ['PDF', 'Word', 'Excel', 'PowerPoint', 'Image', 'Text', 'Other'],\r\n  loading: false,\r\n  error: null,\r\n  searchQuery: '',\r\n  selectedFilters: {\r\n    tags: [],\r\n    projects: [],\r\n    documentTypes: [],\r\n    dateRange: null\r\n  }\r\n};\r\n\r\nfunction documentReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return { ...state, loading: action.payload };\r\n    \r\n    case 'SET_ERROR':\r\n      return { ...state, error: action.payload, loading: false };\r\n    \r\n    case 'ADD_DOCUMENT':\r\n      return {\r\n        ...state,\r\n        documents: [...state.documents, action.payload],\r\n        loading: false\r\n      };\r\n    \r\n    case 'UPDATE_DOCUMENT':\r\n      return {\r\n        ...state,\r\n        documents: state.documents.map(doc =>\r\n          doc.id === action.payload.id ? { ...doc, ...action.payload } : doc\r\n        )\r\n      };\r\n    \r\n    case 'DELETE_DOCUMENT':\r\n      return {\r\n        ...state,\r\n        documents: state.documents.filter(doc => doc.id !== action.payload)\r\n      };\r\n    \r\n    case 'SET_DOCUMENTS':\r\n      return { ...state, documents: action.payload, loading: false };\r\n    \r\n    case 'ADD_TAG':\r\n      return {\r\n        ...state,\r\n        tags: [...state.tags, action.payload]\r\n      };\r\n    \r\n    case 'UPDATE_TAG':\r\n      return {\r\n        ...state,\r\n        tags: state.tags.map(tag =>\r\n          tag.id === action.payload.id ? { ...tag, ...action.payload } : tag\r\n        )\r\n      };\r\n    \r\n    case 'DELETE_TAG':\r\n      return {\r\n        ...state,\r\n        tags: state.tags.filter(tag => tag.id !== action.payload)\r\n      };\r\n    \r\n    case 'SET_TAGS':\r\n      return { ...state, tags: action.payload };\r\n    \r\n    case 'ADD_PROJECT':\r\n      return {\r\n        ...state,\r\n        projects: [...state.projects, action.payload]\r\n      };\r\n    \r\n    case 'SET_PROJECTS':\r\n      return { ...state, projects: action.payload };\r\n    \r\n    case 'SET_SEARCH_QUERY':\r\n      return { ...state, searchQuery: action.payload };\r\n    \r\n    case 'SET_FILTERS':\r\n      return { ...state, selectedFilters: { ...state.selectedFilters, ...action.payload } };\r\n    \r\n    case 'CLEAR_FILTERS':\r\n      return {\r\n        ...state,\r\n        selectedFilters: {\r\n          tags: [],\r\n          projects: [],\r\n          documentTypes: [],\r\n          dateRange: null\r\n        }\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function DocumentProvider({ children }) {\r\n  const [state, dispatch] = useReducer(documentReducer, initialState);\r\n\r\n  // Initialize sample data\r\n  useEffect(() => {\r\n    const sampleTags = [\r\n      { id: '1', name: 'Important', color: '#ff6b6b', type: 'priority' },\r\n      { id: '2', name: 'Review Required', color: '#ffd93d', type: 'status' },\r\n      { id: '3', name: 'Archived', color: '#6bcf7f', type: 'status' },\r\n      { id: '4', name: 'Client Documents', color: '#4d94ff', type: 'category' }\r\n    ];\r\n\r\n    const sampleProjects = [\r\n      { id: '1', name: 'Project Alpha', description: 'Main development project' },\r\n      { id: '2', name: 'Project Beta', description: 'Research and development' },\r\n      { id: '3', name: 'Administrative', description: 'General administrative tasks' }\r\n    ];\r\n\r\n    dispatch({ type: 'SET_TAGS', payload: sampleTags });\r\n    dispatch({ type: 'SET_PROJECTS', payload: sampleProjects });\r\n  }, []);\r\n\r\n  const uploadDocument = async (file, metadata = {}) => {\r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    \r\n    try {\r\n      // Simulate file upload and AI analysis\r\n      const documentId = uuidv4();\r\n      \r\n      // Extract basic metadata\r\n      const basicMetadata = {\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type,\r\n        lastModified: file.lastModified\r\n      };\r\n\r\n      // Get AI suggestions\r\n      const aiSuggestions = await aiTaggingService.analyzeDocument(file, basicMetadata);\r\n      \r\n      const newDocument = {\r\n        id: documentId,\r\n        ...basicMetadata,\r\n        ...metadata,\r\n        uploadDate: new Date().toISOString(),\r\n        tags: [],\r\n        suggestedTags: aiSuggestions.suggestedTags,\r\n        suggestedProject: aiSuggestions.suggestedProject,\r\n        suggestedDocumentType: aiSuggestions.suggestedDocumentType,\r\n        content: aiSuggestions.extractedContent,\r\n        status: 'pending_review', // pending_review, approved, rejected\r\n        url: URL.createObjectURL(file) // In production, this would be a server URL\r\n      };\r\n\r\n      dispatch({ type: 'ADD_DOCUMENT', payload: newDocument });\r\n      toast.success('Document uploaded successfully! Please review AI suggestions.');\r\n      \r\n      return newDocument;\r\n    } catch (error) {\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n      toast.error('Failed to upload document');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateDocumentTags = (documentId, tags, approvedSuggestions = {}) => {\r\n    const updatedDocument = {\r\n      tags,\r\n      ...approvedSuggestions,\r\n      status: 'approved',\r\n      reviewedAt: new Date().toISOString()\r\n    };\r\n    \r\n    dispatch({ type: 'UPDATE_DOCUMENT', payload: { id: documentId, ...updatedDocument } });\r\n    toast.success('Document tags updated successfully');\r\n  };\r\n\r\n  const reAnalyzeDocument = async (documentId) => {\r\n    const document = state.documents.find(doc => doc.id === documentId);\r\n    if (!document) return;\r\n\r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    \r\n    try {\r\n      // Re-analyze with current content and context\r\n      const newSuggestions = await aiTaggingService.reAnalyzeDocument(document);\r\n      \r\n      dispatch({\r\n        type: 'UPDATE_DOCUMENT',\r\n        payload: {\r\n          id: documentId,\r\n          suggestedTags: newSuggestions.suggestedTags,\r\n          suggestedProject: newSuggestions.suggestedProject,\r\n          suggestedDocumentType: newSuggestions.suggestedDocumentType,\r\n          reAnalyzedAt: new Date().toISOString()\r\n        }\r\n      });\r\n      \r\n      toast.success('Document re-analyzed successfully');\r\n    } catch (error) {\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n      toast.error('Failed to re-analyze document');\r\n    }\r\n  };\r\n\r\n  const bulkReAnalyze = async (documentIds = null) => {\r\n    const documentsToAnalyze = documentIds \r\n      ? state.documents.filter(doc => documentIds.includes(doc.id))\r\n      : state.documents;\r\n    \r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    \r\n    try {\r\n      for (const document of documentsToAnalyze) {\r\n        await reAnalyzeDocument(document.id);\r\n      }\r\n      toast.success(`Re-analyzed ${documentsToAnalyze.length} documents`);\r\n    } catch (error) {\r\n      toast.error('Failed to complete bulk re-analysis');\r\n    }\r\n  };\r\n\r\n  const deleteDocument = (documentId) => {\r\n    dispatch({ type: 'DELETE_DOCUMENT', payload: documentId });\r\n    toast.success('Document deleted successfully');\r\n  };\r\n\r\n  const addTag = (tagData) => {\r\n    const newTag = {\r\n      id: uuidv4(),\r\n      ...tagData,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    dispatch({ type: 'ADD_TAG', payload: newTag });\r\n    return newTag;\r\n  };\r\n\r\n  const updateTag = (tagId, tagData) => {\r\n    dispatch({ type: 'UPDATE_TAG', payload: { id: tagId, ...tagData } });\r\n  };\r\n\r\n  const deleteTag = (tagId) => {\r\n    // Also remove this tag from all documents\r\n    state.documents.forEach(doc => {\r\n      if (doc.tags.some(tag => tag.id === tagId)) {\r\n        const updatedTags = doc.tags.filter(tag => tag.id !== tagId);\r\n        dispatch({ type: 'UPDATE_DOCUMENT', payload: { id: doc.id, tags: updatedTags } });\r\n      }\r\n    });\r\n    dispatch({ type: 'DELETE_TAG', payload: tagId });\r\n  };\r\n\r\n  const addProject = (projectData) => {\r\n    const newProject = {\r\n      id: uuidv4(),\r\n      ...projectData,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    dispatch({ type: 'ADD_PROJECT', payload: newProject });\r\n    return newProject;\r\n  };\r\n\r\n  const setSearchQuery = (query) => {\r\n    dispatch({ type: 'SET_SEARCH_QUERY', payload: query });\r\n  };\r\n\r\n  const setFilters = (filters) => {\r\n    dispatch({ type: 'SET_FILTERS', payload: filters });\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    dispatch({ type: 'CLEAR_FILTERS' });\r\n  };\r\n\r\n  const getFilteredDocuments = () => {\r\n    let filtered = [...state.documents];\r\n\r\n    // Search query filter\r\n    if (state.searchQuery) {\r\n      const query = state.searchQuery.toLowerCase();\r\n      filtered = filtered.filter(doc =>\r\n        doc.name.toLowerCase().includes(query) ||\r\n        doc.content?.toLowerCase().includes(query) ||\r\n        doc.tags.some(tag => tag.name.toLowerCase().includes(query))\r\n      );\r\n    }\r\n\r\n    // Tag filter\r\n    if (state.selectedFilters.tags.length > 0) {\r\n      filtered = filtered.filter(doc =>\r\n        doc.tags.some(tag => state.selectedFilters.tags.includes(tag.id))\r\n      );\r\n    }\r\n\r\n    // Project filter\r\n    if (state.selectedFilters.projects.length > 0) {\r\n      filtered = filtered.filter(doc =>\r\n        state.selectedFilters.projects.includes(doc.project?.id)\r\n      );\r\n    }\r\n\r\n    // Document type filter\r\n    if (state.selectedFilters.documentTypes.length > 0) {\r\n      filtered = filtered.filter(doc =>\r\n        state.selectedFilters.documentTypes.includes(doc.documentType)\r\n      );\r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    uploadDocument,\r\n    updateDocumentTags,\r\n    reAnalyzeDocument,\r\n    bulkReAnalyze,\r\n    deleteDocument,\r\n    addTag,\r\n    updateTag,\r\n    deleteTag,\r\n    addProject,\r\n    setSearchQuery,\r\n    setFilters,\r\n    clearFilters,\r\n    getFilteredDocuments\r\n  };\r\n\r\n  return (\r\n    <DocumentContext.Provider value={value}>\r\n      {children}\r\n    </DocumentContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useDocuments() {\r\n  const context = useContext(DocumentContext);\r\n  if (!context) {\r\n    throw new Error('useDocuments must be used within a DocumentProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}