{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bradley.worthen\\\\OneDrive - Nortek, Inc\\\\Documents\\\\Projects\\\\Document Management Web Application\\\\src\\\\components\\\\FilterPanel\\\\FilterPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDocuments } from '../../context/DocumentContext';\nimport { FiX, FiChevronDown, FiChevronUp, FiCalendar } from 'react-icons/fi';\nimport TagBadge from '../TagBadge/TagBadge';\nimport './FilterPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterPanel() {\n  _s();\n  var _selectedFilters$tags, _selectedFilters$proj, _selectedFilters$docu, _selectedFilters$tags3, _selectedFilters$proj3, _selectedFilters$docu3, _dateRangeOptions$fin;\n  const {\n    tags,\n    projects,\n    documentTypes,\n    selectedFilters,\n    setFilters,\n    clearFilters\n  } = useDocuments();\n  const [expandedSections, setExpandedSections] = useState({\n    tags: true,\n    projects: true,\n    documentTypes: true,\n    dateRange: false\n  });\n  const toggleSection = section => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n  const handleTagFilter = tagId => {\n    const currentTags = selectedFilters.tags || [];\n    const newTags = currentTags.includes(tagId) ? currentTags.filter(id => id !== tagId) : [...currentTags, tagId];\n    setFilters({\n      tags: newTags\n    });\n  };\n  const handleProjectFilter = projectId => {\n    const currentProjects = selectedFilters.projects || [];\n    const newProjects = currentProjects.includes(projectId) ? currentProjects.filter(id => id !== projectId) : [...currentProjects, projectId];\n    setFilters({\n      projects: newProjects\n    });\n  };\n  const handleDocumentTypeFilter = docType => {\n    const currentTypes = selectedFilters.documentTypes || [];\n    const newTypes = currentTypes.includes(docType) ? currentTypes.filter(type => type !== docType) : [...currentTypes, docType];\n    setFilters({\n      documentTypes: newTypes\n    });\n  };\n  const handleDateRangeFilter = range => {\n    setFilters({\n      dateRange: range\n    });\n  };\n  const hasActiveFilters = Object.values(selectedFilters).some(filter => Array.isArray(filter) ? filter.length > 0 : filter !== null);\n  const getDocumentTypeIcon = type => {\n    const icons = {\n      'PDF': '📄',\n      'Word': '📝',\n      'Excel': '📊',\n      'PowerPoint': '📽️',\n      'Image': '🖼️',\n      'Text': '📃',\n      'Other': '📁'\n    };\n    return icons[type] || '📁';\n  };\n  const dateRangeOptions = [{\n    label: 'Today',\n    value: 'today'\n  }, {\n    label: 'This Week',\n    value: 'week'\n  }, {\n    label: 'This Month',\n    value: 'month'\n  }, {\n    label: 'Last 3 Months',\n    value: '3months'\n  }, {\n    label: 'This Year',\n    value: 'year'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-panel-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"filter-title\",\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), hasActiveFilters && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-filters-btn\",\n        onClick: clearFilters,\n        title: \"Clear all filters\",\n        children: [/*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), \"Clear All\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-section-header\",\n          onClick: () => toggleSection('tags'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"section-title\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"section-toggle\",\n            children: expandedSections.tags ? /*#__PURE__*/_jsxDEV(FiChevronUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(FiChevronDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), ((_selectedFilters$tags = selectedFilters.tags) === null || _selectedFilters$tags === void 0 ? void 0 : _selectedFilters$tags.length) > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"active-count\",\n            children: selectedFilters.tags.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), expandedSections.tags && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section-content\",\n          children: tags.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filter-empty\",\n            children: \"No tags available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-options\",\n            children: tags.map(tag => {\n              var _selectedFilters$tags2;\n              return /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"filter-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: ((_selectedFilters$tags2 = selectedFilters.tags) === null || _selectedFilters$tags2 === void 0 ? void 0 : _selectedFilters$tags2.includes(tag.id)) || false,\n                  onChange: () => handleTagFilter(tag.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TagBadge, {\n                  tag: tag,\n                  size: \"sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this)]\n              }, tag.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-section-header\",\n          onClick: () => toggleSection('projects'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"section-title\",\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"section-toggle\",\n            children: expandedSections.projects ? /*#__PURE__*/_jsxDEV(FiChevronUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 44\n            }, this) : /*#__PURE__*/_jsxDEV(FiChevronDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), ((_selectedFilters$proj = selectedFilters.projects) === null || _selectedFilters$proj === void 0 ? void 0 : _selectedFilters$proj.length) > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"active-count\",\n            children: selectedFilters.projects.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), expandedSections.projects && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section-content\",\n          children: projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filter-empty\",\n            children: \"No projects available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-options\",\n            children: projects.map(project => {\n              var _selectedFilters$proj2;\n              return /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"filter-option project-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: ((_selectedFilters$proj2 = selectedFilters.projects) === null || _selectedFilters$proj2 === void 0 ? void 0 : _selectedFilters$proj2.includes(project.id)) || false,\n                  onChange: () => handleProjectFilter(project.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"project-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"project-name\",\n                    children: project.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 25\n                  }, this), project.description && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"project-description\",\n                    children: project.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 23\n                }, this)]\n              }, project.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-section-header\",\n          onClick: () => toggleSection('documentTypes'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"section-title\",\n            children: \"Document Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"section-toggle\",\n            children: expandedSections.documentTypes ? /*#__PURE__*/_jsxDEV(FiChevronUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(FiChevronDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), ((_selectedFilters$docu = selectedFilters.documentTypes) === null || _selectedFilters$docu === void 0 ? void 0 : _selectedFilters$docu.length) > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"active-count\",\n            children: selectedFilters.documentTypes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), expandedSections.documentTypes && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-options\",\n            children: documentTypes.map(type => {\n              var _selectedFilters$docu2;\n              return /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"filter-option doc-type-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: ((_selectedFilters$docu2 = selectedFilters.documentTypes) === null || _selectedFilters$docu2 === void 0 ? void 0 : _selectedFilters$docu2.includes(type)) || false,\n                  onChange: () => handleDocumentTypeFilter(type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"doc-type-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"doc-type-icon\",\n                    children: getDocumentTypeIcon(type)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"doc-type-name\",\n                    children: type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-section-header\",\n          onClick: () => toggleSection('dateRange'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"section-title\",\n            children: [/*#__PURE__*/_jsxDEV(FiCalendar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), \"Date Range\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"section-toggle\",\n            children: expandedSections.dateRange ? /*#__PURE__*/_jsxDEV(FiChevronUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(FiChevronDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), selectedFilters.dateRange && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"active-indicator\",\n            children: \"\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), expandedSections.dateRange && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-options\",\n            children: [dateRangeOptions.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"filter-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"dateRange\",\n                value: option.value,\n                checked: selectedFilters.dateRange === option.value,\n                onChange: () => handleDateRangeFilter(option.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"date-range-label\",\n                children: option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this)]\n            }, option.value, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)), selectedFilters.dateRange && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-date-range-btn\",\n              onClick: () => handleDateRangeFilter(null),\n              children: \"Clear Date Filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), hasActiveFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-filters-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"summary-title\",\n        children: \"Active Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-filters-list\",\n        children: [(_selectedFilters$tags3 = selectedFilters.tags) === null || _selectedFilters$tags3 === void 0 ? void 0 : _selectedFilters$tags3.map(tagId => {\n          const tag = tags.find(t => t.id === tagId);\n          return tag ? /*#__PURE__*/_jsxDEV(TagBadge, {\n            tag: tag,\n            size: \"xs\",\n            removable: true,\n            onRemove: () => handleTagFilter(tagId)\n          }, tagId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this) : null;\n        }), (_selectedFilters$proj3 = selectedFilters.projects) === null || _selectedFilters$proj3 === void 0 ? void 0 : _selectedFilters$proj3.map(projectId => {\n          const project = projects.find(p => p.id === projectId);\n          return project ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"active-filter-item\",\n            children: [project.name, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleProjectFilter(projectId),\n              className: \"remove-filter-btn\",\n              children: /*#__PURE__*/_jsxDEV(FiX, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this)]\n          }, projectId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this) : null;\n        }), (_selectedFilters$docu3 = selectedFilters.documentTypes) === null || _selectedFilters$docu3 === void 0 ? void 0 : _selectedFilters$docu3.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"active-filter-item\",\n          children: [getDocumentTypeIcon(type), \" \", type, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDocumentTypeFilter(type),\n            className: \"remove-filter-btn\",\n            children: /*#__PURE__*/_jsxDEV(FiX, {\n              size: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this)]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, this)), selectedFilters.dateRange && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"active-filter-item\",\n          children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n            size: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this), (_dateRangeOptions$fin = dateRangeOptions.find(opt => opt.value === selectedFilters.dateRange)) === null || _dateRangeOptions$fin === void 0 ? void 0 : _dateRangeOptions$fin.label, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDateRangeFilter(null),\n            className: \"remove-filter-btn\",\n            children: /*#__PURE__*/_jsxDEV(FiX, {\n              size: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterPanel, \"UJOnDGiN0NFRncltAtX9qvk+Peg=\", false, function () {\n  return [useDocuments];\n});\n_c = FilterPanel;\nexport default FilterPanel;\nvar _c;\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"names":["React","useState","useDocuments","FiX","FiChevronDown","FiChevronUp","FiCalendar","TagBadge","jsxDEV","_jsxDEV","FilterPanel","_s","_selectedFilters$tags","_selectedFilters$proj","_selectedFilters$docu","_selectedFilters$tags3","_selectedFilters$proj3","_selectedFilters$docu3","_dateRangeOptions$fin","tags","projects","documentTypes","selectedFilters","setFilters","clearFilters","expandedSections","setExpandedSections","dateRange","toggleSection","section","prev","handleTagFilter","tagId","currentTags","newTags","includes","filter","id","handleProjectFilter","projectId","currentProjects","newProjects","handleDocumentTypeFilter","docType","currentTypes","newTypes","type","handleDateRangeFilter","range","hasActiveFilters","Object","values","some","Array","isArray","length","getDocumentTypeIcon","icons","dateRangeOptions","label","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","map","tag","_selectedFilters$tags2","checked","onChange","size","project","_selectedFilters$proj2","name","description","_selectedFilters$docu2","option","find","t","removable","onRemove","p","opt","_c","$RefreshReg$"],"sources":["C:/Users/bradley.worthen/OneDrive - Nortek, Inc/Documents/Projects/Document Management Web Application/src/components/FilterPanel/FilterPanel.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDocuments } from '../../context/DocumentContext';\r\nimport { FiX, FiChevronDown, FiChevronUp, FiCalendar } from 'react-icons/fi';\r\nimport TagBadge from '../TagBadge/TagBadge';\r\nimport './FilterPanel.css';\r\n\r\nfunction FilterPanel() {\r\n  const { \r\n    tags, \r\n    projects, \r\n    documentTypes, \r\n    selectedFilters, \r\n    setFilters, \r\n    clearFilters \r\n  } = useDocuments();\r\n  \r\n  const [expandedSections, setExpandedSections] = useState({\r\n    tags: true,\r\n    projects: true,\r\n    documentTypes: true,\r\n    dateRange: false\r\n  });\r\n\r\n  const toggleSection = (section) => {\r\n    setExpandedSections(prev => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  const handleTagFilter = (tagId) => {\r\n    const currentTags = selectedFilters.tags || [];\r\n    const newTags = currentTags.includes(tagId)\r\n      ? currentTags.filter(id => id !== tagId)\r\n      : [...currentTags, tagId];\r\n    \r\n    setFilters({ tags: newTags });\r\n  };\r\n\r\n  const handleProjectFilter = (projectId) => {\r\n    const currentProjects = selectedFilters.projects || [];\r\n    const newProjects = currentProjects.includes(projectId)\r\n      ? currentProjects.filter(id => id !== projectId)\r\n      : [...currentProjects, projectId];\r\n    \r\n    setFilters({ projects: newProjects });\r\n  };\r\n\r\n  const handleDocumentTypeFilter = (docType) => {\r\n    const currentTypes = selectedFilters.documentTypes || [];\r\n    const newTypes = currentTypes.includes(docType)\r\n      ? currentTypes.filter(type => type !== docType)\r\n      : [...currentTypes, docType];\r\n    \r\n    setFilters({ documentTypes: newTypes });\r\n  };\r\n\r\n  const handleDateRangeFilter = (range) => {\r\n    setFilters({ dateRange: range });\r\n  };\r\n\r\n  const hasActiveFilters = Object.values(selectedFilters).some(filter => \r\n    Array.isArray(filter) ? filter.length > 0 : filter !== null\r\n  );\r\n\r\n  const getDocumentTypeIcon = (type) => {\r\n    const icons = {\r\n      'PDF': '📄',\r\n      'Word': '📝',\r\n      'Excel': '📊',\r\n      'PowerPoint': '📽️',\r\n      'Image': '🖼️',\r\n      'Text': '📃',\r\n      'Other': '📁'\r\n    };\r\n    return icons[type] || '📁';\r\n  };\r\n\r\n  const dateRangeOptions = [\r\n    { label: 'Today', value: 'today' },\r\n    { label: 'This Week', value: 'week' },\r\n    { label: 'This Month', value: 'month' },\r\n    { label: 'Last 3 Months', value: '3months' },\r\n    { label: 'This Year', value: 'year' }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"filter-panel\">\r\n      <div className=\"filter-panel-header\">\r\n        <h3 className=\"filter-title\">Filters</h3>\r\n        {hasActiveFilters && (\r\n          <button \r\n            className=\"clear-filters-btn\"\r\n            onClick={clearFilters}\r\n            title=\"Clear all filters\"\r\n          >\r\n            <FiX />\r\n            Clear All\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"filter-sections\">\r\n        {/* Tags Filter */}\r\n        <div className=\"filter-section\">\r\n          <button\r\n            className=\"filter-section-header\"\r\n            onClick={() => toggleSection('tags')}\r\n          >\r\n            <span className=\"section-title\">Tags</span>\r\n            <span className=\"section-toggle\">\r\n              {expandedSections.tags ? <FiChevronUp /> : <FiChevronDown />}\r\n            </span>\r\n            {selectedFilters.tags?.length > 0 && (\r\n              <span className=\"active-count\">{selectedFilters.tags.length}</span>\r\n            )}\r\n          </button>\r\n          \r\n          {expandedSections.tags && (\r\n            <div className=\"filter-section-content\">\r\n              {tags.length === 0 ? (\r\n                <p className=\"filter-empty\">No tags available</p>\r\n              ) : (\r\n                <div className=\"filter-options\">\r\n                  {tags.map(tag => (\r\n                    <label key={tag.id} className=\"filter-option\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedFilters.tags?.includes(tag.id) || false}\r\n                        onChange={() => handleTagFilter(tag.id)}\r\n                      />\r\n                      <TagBadge tag={tag} size=\"sm\" />\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Projects Filter */}\r\n        <div className=\"filter-section\">\r\n          <button\r\n            className=\"filter-section-header\"\r\n            onClick={() => toggleSection('projects')}\r\n          >\r\n            <span className=\"section-title\">Projects</span>\r\n            <span className=\"section-toggle\">\r\n              {expandedSections.projects ? <FiChevronUp /> : <FiChevronDown />}\r\n            </span>\r\n            {selectedFilters.projects?.length > 0 && (\r\n              <span className=\"active-count\">{selectedFilters.projects.length}</span>\r\n            )}\r\n          </button>\r\n          \r\n          {expandedSections.projects && (\r\n            <div className=\"filter-section-content\">\r\n              {projects.length === 0 ? (\r\n                <p className=\"filter-empty\">No projects available</p>\r\n              ) : (\r\n                <div className=\"filter-options\">\r\n                  {projects.map(project => (\r\n                    <label key={project.id} className=\"filter-option project-option\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedFilters.projects?.includes(project.id) || false}\r\n                        onChange={() => handleProjectFilter(project.id)}\r\n                      />\r\n                      <div className=\"project-info\">\r\n                        <span className=\"project-name\">{project.name}</span>\r\n                        {project.description && (\r\n                          <span className=\"project-description\">{project.description}</span>\r\n                        )}\r\n                      </div>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Document Types Filter */}\r\n        <div className=\"filter-section\">\r\n          <button\r\n            className=\"filter-section-header\"\r\n            onClick={() => toggleSection('documentTypes')}\r\n          >\r\n            <span className=\"section-title\">Document Types</span>\r\n            <span className=\"section-toggle\">\r\n              {expandedSections.documentTypes ? <FiChevronUp /> : <FiChevronDown />}\r\n            </span>\r\n            {selectedFilters.documentTypes?.length > 0 && (\r\n              <span className=\"active-count\">{selectedFilters.documentTypes.length}</span>\r\n            )}\r\n          </button>\r\n          \r\n          {expandedSections.documentTypes && (\r\n            <div className=\"filter-section-content\">\r\n              <div className=\"filter-options\">\r\n                {documentTypes.map(type => (\r\n                  <label key={type} className=\"filter-option doc-type-option\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedFilters.documentTypes?.includes(type) || false}\r\n                      onChange={() => handleDocumentTypeFilter(type)}\r\n                    />\r\n                    <div className=\"doc-type-info\">\r\n                      <span className=\"doc-type-icon\">{getDocumentTypeIcon(type)}</span>\r\n                      <span className=\"doc-type-name\">{type}</span>\r\n                    </div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Date Range Filter */}\r\n        <div className=\"filter-section\">\r\n          <button\r\n            className=\"filter-section-header\"\r\n            onClick={() => toggleSection('dateRange')}\r\n          >\r\n            <span className=\"section-title\">\r\n              <FiCalendar />\r\n              Date Range\r\n            </span>\r\n            <span className=\"section-toggle\">\r\n              {expandedSections.dateRange ? <FiChevronUp /> : <FiChevronDown />}\r\n            </span>\r\n            {selectedFilters.dateRange && (\r\n              <span className=\"active-indicator\">•</span>\r\n            )}\r\n          </button>\r\n          \r\n          {expandedSections.dateRange && (\r\n            <div className=\"filter-section-content\">\r\n              <div className=\"filter-options\">\r\n                {dateRangeOptions.map(option => (\r\n                  <label key={option.value} className=\"filter-option\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"dateRange\"\r\n                      value={option.value}\r\n                      checked={selectedFilters.dateRange === option.value}\r\n                      onChange={() => handleDateRangeFilter(option.value)}\r\n                    />\r\n                    <span className=\"date-range-label\">{option.label}</span>\r\n                  </label>\r\n                ))}\r\n                {selectedFilters.dateRange && (\r\n                  <button\r\n                    className=\"clear-date-range-btn\"\r\n                    onClick={() => handleDateRangeFilter(null)}\r\n                  >\r\n                    Clear Date Filter\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Active Filters Summary */}\r\n      {hasActiveFilters && (\r\n        <div className=\"active-filters-summary\">\r\n          <h4 className=\"summary-title\">Active Filters</h4>\r\n          <div className=\"active-filters-list\">\r\n            {selectedFilters.tags?.map(tagId => {\r\n              const tag = tags.find(t => t.id === tagId);\r\n              return tag ? (\r\n                <TagBadge \r\n                  key={tagId} \r\n                  tag={tag} \r\n                  size=\"xs\" \r\n                  removable \r\n                  onRemove={() => handleTagFilter(tagId)}\r\n                />\r\n              ) : null;\r\n            })}\r\n            \r\n            {selectedFilters.projects?.map(projectId => {\r\n              const project = projects.find(p => p.id === projectId);\r\n              return project ? (\r\n                <span key={projectId} className=\"active-filter-item\">\r\n                  {project.name}\r\n                  <button \r\n                    onClick={() => handleProjectFilter(projectId)}\r\n                    className=\"remove-filter-btn\"\r\n                  >\r\n                    <FiX size={12} />\r\n                  </button>\r\n                </span>\r\n              ) : null;\r\n            })}\r\n            \r\n            {selectedFilters.documentTypes?.map(type => (\r\n              <span key={type} className=\"active-filter-item\">\r\n                {getDocumentTypeIcon(type)} {type}\r\n                <button \r\n                  onClick={() => handleDocumentTypeFilter(type)}\r\n                  className=\"remove-filter-btn\"\r\n                >\r\n                  <FiX size={12} />\r\n                </button>\r\n              </span>\r\n            ))}\r\n            \r\n            {selectedFilters.dateRange && (\r\n              <span className=\"active-filter-item\">\r\n                <FiCalendar size={12} />\r\n                {dateRangeOptions.find(opt => opt.value === selectedFilters.dateRange)?.label}\r\n                <button \r\n                  onClick={() => handleDateRangeFilter(null)}\r\n                  className=\"remove-filter-btn\"\r\n                >\r\n                  <FiX size={12} />\r\n                </button>\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}